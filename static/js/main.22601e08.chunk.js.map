{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","usersFromServer","find","defaultList","userId","App","useState","setTodos","setTitle","userIDs","setUserIDs","flagTitle","setFlagTitle","flagUser","setFlagUser","action","method","onSubmit","event","preventDefault","titleTrim","trim","listValues","posts","Math","max","post","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22601e08.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/type';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user?.email}`}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/type';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/type';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n          data-id={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/type';\n\nfunction getUserById(id: number) {\n  return usersFromServer.find(user => user.id === id) || null;\n}\n\nfunction getPostId(posts: Todo[]) {\n  return Math.max(...posts.map(post => post.id));\n}\n\nconst defaultList = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(defaultList);\n  const [title, setTitle] = useState('');\n  const [userIDs, setUserIDs] = useState(0);\n  const [flagTitle, setFlagTitle] = useState(false);\n  const [flagUser, setFlagUser] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const titleTrim = title.trim();\n\n    setFlagTitle(!titleTrim);\n    setFlagUser(!userIDs);\n\n    if (!titleTrim || !userIDs) {\n      return false;\n    }\n\n    setTitle('');\n    setUserIDs(0);\n    setTodos(listValues => [...listValues, {\n      id: getPostId(listValues) + 1,\n      title,\n      completed: false,\n      userId: userIDs,\n      user: getUserById(userIDs) || null,\n    }]);\n\n    return true;\n  };\n\n  const handleChangeTitle = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setFlagTitle(false);\n  };\n\n  const handleChangeUser = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setUserIDs(+event.target.value);\n    setFlagUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        className=\"form\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <span>Title</span>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChangeTitle}\n          />\n          {flagTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <span>User</span>\n          <select\n            data-cy=\"userSelect\"\n            value={userIDs}\n            onChange={handleChangeUser}\n          >\n            <option value=\"0\" key=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {flagUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          className=\"form_action\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}